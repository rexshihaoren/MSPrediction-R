demo()
dnorm
help()
dbinom(2.51)
pnorm(0)
binorm(2.51)
bnorm(2.51)
pnorm(2.51)
n=200
p=.45
q=
.55
sqrt(npq)
sqrt(n*p*q)
sd=sqrt(n*p*q)
sd
sd
mu=n*p
pnorm((mu+.5-mu)/sd)-pnorm((mu-.5-mu)/sd)
pnorm(10.5/7.0356)
*-1
1-pnorm(10.5/7.0356)
1-pnorm(100.5-mu/sd)
1-pnorm(100.5-mu/sd)
1-pnorm(100.5-90/7.0356)
1-pnorm(10.5/7.0356)
1-pnorm((100.5-mu)/sd)
pnorm((100.5-100/5)-pnorm((99.5-100)/5)
pnorm((100.5-100/5)-pnorm((99.5-100)/5)
pnorm((100.5-100/5))-pnorm((99.5-100)/5)
clc
clearn
clear
clean
sqrt(100/4)
sqrt(200/4)
sd=sqrt(200/4)
pnorm((100.5-100)/sd)-pnorm((99.5-100)/sd)
e^(100) * 100^0
exp(100) * 100^0
exp(-100) * 100^0
exp(-0.0567198*30)
3exp(-2)
3*exp(-2)
2*exp(-2)
1-5*exp(-2)
6*exp(-4)
exp(5/3) *(5/3)^2 /2
exp(.5) *(.6)^2 /2
exp(.5) *(.6)
exp(.6) *(.6)
exp(.6) *(.6)^2/2
exp(.6) *(.6)
exp(-5/3) *(5/3)^2 /2
exp(-5/3) *(5/3)
exp(-5/3) *(5/3)
exp(-5/3)
exp(-5/3) *8/3
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/step3/data.RData")
str(allQOL)
ls
ls()
str(fam2)
str(fam)
str(fams)
load("./step1/result.RData")
load("step1/result.RData")
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/step1/result.RData")
ls()
str(allQOL)
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/step0/result.RData")
...
install.packages("xlsx")
install.packages("foreign")
install.packages("foreach")
install.packages("multicore")
install.packages("XML")
install.packages("googleVis")
install.packages("reshape")
install.packages("xlsx")
install.packages("foreign")
install.packages("foreign")
"foreach"
install.packages("foreach")
install.packages("foreach")
install.packages("multicore")
install.packages(c("lattice", "Matrix", "mgcv", "nlme", "rpart", "survival"))
install.packages("XML")
install.packages("googleVis")
install.packages("googleVis")
install.packages("reshape")
library("spatial", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("splines", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("multicore", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("parallel", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("reshape", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("foreach", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
ls()
for g in c(4:7){}
1808/2187
require(ggplot2)
require(rhdf5)
pnorm(1.363)
1-pnorm(1.3363)
1-pnorm(.3095800853708794)
1-pnorm(1.3095800853708794)
pnorm(.1)-pnorm(-.1)
13^2/15^2
13^2/15^2*.5
1-(5/15)^10
1+(5/15)^10-2*(10/15)^10
x=1
y =5*.5^4*x-x^5/5
x=.5
x =1
x = .5
y2 =5*.5^4*x-x^5/5
y2-y1
y2-y
x =1
y =5*.5^4*x-x^5
y2 =5*.5^4*x-x^5
x=.5
y2 =5*.5^4*x-x^5
y2=y
y2 =5*.5^4*x-x^5
y2-y
31/32
y2 =-5*.5^4*x+x^5
x=1
y =-5*.5^4*x+x^5
y-y2
31/32
5(1/5-.5^4-(.5^5/5-.5^5))
u=5(1/5-.5^4-(.5^5/5-.5^5))
5(1/5-.5^4-(.5^5/5-.5^5)))
pnorm(5/sqrt(13))
1-pnorm(5/sqrt(13))
2pnorm(1)-pnorm(1)^2
2*pnorm(1)-pnorm(1)^2
pnorm(1)-pnorm(-1)
pnorm(1/sqrt(2))
pnorm(1)-pnorm(-1)
pnorm(2000/sqrt(2000000))
1-pnorm(2000/sqrt(2000000))
1-pnorm(1.41
)
(1-pnorm(1))*(1-pnorm(-1))
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/binarize.r")
total <- read.csv("step3/data_all.csv")
load("step1/result.RData")
# fetch original fam2
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
total <- read.csv("step3/data_all.csv")
total
head(total)
total2 <- "step1/result.RData"
head(total2)
load("step1/result.RData")
View(fullTable3)
View(fullTable3)
head(fullTable3)
ggplot(modfam2) + geom_histogram(aes(x=ActualEDSS))
load("ggplot")
require(ggplot2)
require(ggplot2
)
require(ggplot2)
install.packages("ggplot2")
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
BiocUpgrade
?BiocUpgrade
biocLite("BiocUpgrade")
biocLite("rhdf5")
require(ggplot2
modfam2<-read.csv("step3/data_all.csv")
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
modfam2<-read.csv("step3/data_all.csv")
# only 5 cols, group1~3, relative-pain, enjoylife
modfam2<-modfam2[,9:13]
# fetch original fam2
load("step1/result.RData")
# get rid visitID
fam2<-fam2[,-1]
# plotting PDF
ggplot(modfam2) + geom_histogram(aes(x=EnjoyLife))
ggsave(file="plots/modfam2.pdf")
ggplot(fam2) + geom_histogram(aes(x=EnjoyLife))
ggsave(file="plots/fam2.pdf")
# find the enjoy life median
medianEL<- median(modfam2$EnjoyLife)
# binarize the modfam2, fam2
modfam2$EnjoyLife<-ifelse(modfam2$EnjoyLife <= medianEL, 0, 1)
fam2$EnjoyLife<-ifelse(fam2$EnjoyLife <= medianEL, 0, 1)
# Plot PDF after binarize
ggplot(modfam2) + geom_histogram(aes(x=EnjoyLife))
ggsave(file="plots/bin_modfam2.pdf")
ggplot(fam2) + geom_histogram(aes(x=EnjoyLife))
ggsave(file="plots/bin_fam2.pdf")
#save binarized fam2,modfam2 in HDF5 format
h5createFile('data/predData.h5')
h5write(fam2, "data/predData.h5","fam2")
h5write(modfam2,"data/predData.h5","modfam2")
# Plot CDF
generateCDF<-function(somedf, plotfunc){
dfname = deparse(substitute(somedf))
pfname = deparse(substitute(plotfunc))
for (i in colnames(somedf)){
if (i != "EnjoyLife"){
if (pfname == "geom_density"){
ggplot(somedf) + plotfunc(aes_string(x=i, group = "EnjoyLife", color = "EnjoyLife"))
} else {
ggplot(somedf) + plotfunc(aes_string(x=i, group = "EnjoyLife", fill = "EnjoyLife"), position = "dodge")
}
fpath = paste("plots/",paste(dfname, "cdf",i, sep = "_"), ".pdf", sep="")
ggsave(file = fpath)
}
}
}
generateCDF(modfam2,geom_density)
generateCDF(fam2, geom_histogram)
