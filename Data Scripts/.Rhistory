demo()
dnorm
help()
dbinom(2.51)
pnorm(0)
binorm(2.51)
bnorm(2.51)
pnorm(2.51)
n=200
p=.45
q=
.55
sqrt(npq)
sqrt(n*p*q)
sd=sqrt(n*p*q)
sd
sd
mu=n*p
pnorm((mu+.5-mu)/sd)-pnorm((mu-.5-mu)/sd)
pnorm(10.5/7.0356)
*-1
1-pnorm(10.5/7.0356)
1-pnorm(100.5-mu/sd)
1-pnorm(100.5-mu/sd)
1-pnorm(100.5-90/7.0356)
1-pnorm(10.5/7.0356)
1-pnorm((100.5-mu)/sd)
pnorm((100.5-100/5)-pnorm((99.5-100)/5)
pnorm((100.5-100/5)-pnorm((99.5-100)/5)
pnorm((100.5-100/5))-pnorm((99.5-100)/5)
clc
clearn
clear
clean
sqrt(100/4)
sqrt(200/4)
sd=sqrt(200/4)
pnorm((100.5-100)/sd)-pnorm((99.5-100)/sd)
e^(100) * 100^0
exp(100) * 100^0
exp(-100) * 100^0
exp(-0.0567198*30)
3exp(-2)
3*exp(-2)
2*exp(-2)
1-5*exp(-2)
6*exp(-4)
exp(5/3) *(5/3)^2 /2
exp(.5) *(.6)^2 /2
exp(.5) *(.6)
exp(.6) *(.6)
exp(.6) *(.6)^2/2
exp(.6) *(.6)
exp(-5/3) *(5/3)^2 /2
exp(-5/3) *(5/3)
exp(-5/3) *(5/3)
exp(-5/3)
exp(-5/3) *8/3
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/step3/data.RData")
str(allQOL)
ls
ls()
str(fam2)
str(fam)
str(fams)
load("./step1/result.RData")
load("step1/result.RData")
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/step1/result.RData")
ls()
str(allQOL)
load("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts/step0/result.RData")
...
install.packages("xlsx")
install.packages("foreign")
install.packages("foreach")
install.packages("multicore")
install.packages("XML")
install.packages("googleVis")
install.packages("reshape")
install.packages("xlsx")
install.packages("foreign")
install.packages("foreign")
"foreach"
install.packages("foreach")
install.packages("foreach")
install.packages("multicore")
install.packages(c("lattice", "Matrix", "mgcv", "nlme", "rpart", "survival"))
install.packages("XML")
install.packages("googleVis")
install.packages("googleVis")
install.packages("reshape")
library("spatial", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("splines", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("multicore", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("parallel", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("reshape", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("foreach", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
ls()
for g in c(4:7){}
1808/2187
require(ggplot2)
require(rhdf5)
pnorm(1.363)
1-pnorm(1.3363)
1-pnorm(.3095800853708794)
1-pnorm(1.3095800853708794)
pnorm(.1)-pnorm(-.1)
13^2/15^2
13^2/15^2*.5
1-(5/15)^10
1+(5/15)^10-2*(10/15)^10
x=1
y =5*.5^4*x-x^5/5
x=.5
x =1
x = .5
y2 =5*.5^4*x-x^5/5
y2-y1
y2-y
x =1
y =5*.5^4*x-x^5
y2 =5*.5^4*x-x^5
x=.5
y2 =5*.5^4*x-x^5
y2=y
y2 =5*.5^4*x-x^5
y2-y
31/32
y2 =-5*.5^4*x+x^5
x=1
y =-5*.5^4*x+x^5
y-y2
31/32
5(1/5-.5^4-(.5^5/5-.5^5))
u=5(1/5-.5^4-(.5^5/5-.5^5))
5(1/5-.5^4-(.5^5/5-.5^5)))
pnorm(5/sqrt(13))
1-pnorm(5/sqrt(13))
2pnorm(1)-pnorm(1)^2
2*pnorm(1)-pnorm(1)^2
pnorm(1)-pnorm(-1)
pnorm(1/sqrt(2))
pnorm(1)-pnorm(-1)
pnorm(2000/sqrt(2000000))
1-pnorm(2000/sqrt(2000000))
1-pnorm(1.41
)
(1-pnorm(1))*(1-pnorm(-1))
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
# colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
#merged = merge(fam2, modfam2, by = "VisitID", all.y = TRUE)
#merged <- merge(fam2, modfam2, by = "VisitID")
#merged <- merge(merged, fullTable3, by = "VisitID")
merged <- merge(fam2, modfam2, by="VisitId", by.y="VisitID")
merged <- merge(merged, fullTable3, by="VisitId", by.y="VisitID")
# only 5 cols, group1~3, relative-pain, enjoylife
modfam2<-modfam2[,8:12]
# get rid visitID
fam2<-fam2[,-1]
Binarize <- function(df, target){
# to Binarize a target column of a datafram
med <- median(df[[target]])
bin <- df
bin[[target]] <- ifelse(bin[[target]] <= med, 0,1)
return(bin)
}
modfam2_bin <-Binarize(modfam2, "EnjoyLife")
fam2_bin <- Binarize(fam2, "EnjoyLife")
DataProcessing <- function(df, target = ""){
# Processing a data frame to make everything (0, 1] except the target col
if (target == ""){
loc <- ncol(df)+1
} else{
loc <- grep(target, colnames(df))
}
processing <- df
processing <- apply(processing, 2, function(x) (x-min(x))/(max(x)-min(x)))
processing[,-loc] <- apply(processing[,-loc], c(1,2), function(x) if (x == 0) x+1e-12 else x)
as.data.frame(processing)
}
modfam2_processing <- DataProcessing(modfam2_bin, "EnjoyLife")
fam2_processing <- DataProcessing(fam2_bin, "EnjoyLife")
##################Calculate EDSS Rate###########
merged_updated <- merged[order(merged$EPICID, merged$ExamDate),]
# Add Empty EDSSRate col
merged_updated[, "EDSSRate"] <- NA
nvisits <- nrow(merged_updated)
for(i in 1:(nvisits-1)){
dEDSS <- merged_updated[i+1, "ActualEDSS"] - merged_updated[i, "ActualEDSS"]
dDay <- as.numeric(as.Date(merged_updated[i+1,]$ExamDate) - as.Date(merged_updated[i,]$ExamDate))
dYear <- dDay/365
if (merged_updated[i+1, "EPICID"] == merged_updated[i, "EPICID"] ){
merged_updated[i+1, "EDSSRate"] <- dEDSS/dYear
}
}
### one more col in modified EDSSR, ignore abs dEDSSS <= 0.5; 2 class, increase or others
merged_updated[, "ModEDSSR"] <- NA
for(i in 1:(nvisits-1)){
dEDSS <- merged_updated[i+1, "ActualEDSS"] - merged_updated[i, "ActualEDSS"]
dDay <- as.numeric(as.Date(merged_updated[i+1,]$ExamDate) - as.Date(merged_updated[i,]$ExamDate))
dYear <- dDay/365
if (merged_updated[i+1, "EPICID"] == merged_updated[i, "EPICID"] ){
if (abs(dEDSS)<.5){
merged_updated[i+1, "ModEDSSR"] <- 0
} else {
merged_updated[i+1, "ModEDSSR"] <- 1
}
}
}
merged_updated <- merged[order(merged$EPICID, merged$ExamDate),]
View(merged)
colnames(merged)
merged <- merge(fam2, modfam2, by.x="VisitId", by.y="VisitID")
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
# colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
merged <- merge(fam2, modfam2, by.x="VisitId", by.y="VisitID")
merged <- merge(merged, fullTable3, by.x="VisitId", by.y="VisitID")
View(merged)
View(merged)
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
#merged = merge(fam2, modfam2, by = "VisitID", all.y = TRUE)
#merged <- merge(fam2, modfam2, by = "VisitID")
#merged <- merge(merged, fullTable3, by = "VisitID")
#merged <- merge(fam2, modfam2, by="VisitId", by.y="VisitID")
merged <- merge(fam2, modfam2, by="VisitID")
View(merged)
View(merged)
View(modfam2)
View(modfam2)
View(fam2)
View(fam2)
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
#colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
#merged = merge(fam2, modfam2, by = "VisitID", all.y = TRUE)
#merged <- merge(fam2, modfam2, by = "VisitID")
#merged <- merge(merged, fullTable3, by = "VisitID")
merged <- merge(fam2, modfam2, by="VisitId", by.y="VisitID")
#merged <- merge(fam2, modfam2, by="VisitID")
merged <- merge(merged, fullTable3, by.x="VisitId", by.y="VisitID")
# only 5 cols, group1~3, relative-pain, enjoylife
modfam2<-modfam2[,8:12]
# get rid visitID
fam2<-fam2[,-1]
View(merged)
View(merged)
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
#colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
#merged = merge(fam2, modfam2, by = "VisitID", all.y = TRUE)
#merged <- merge(fam2, modfam2, by = "VisitID")
#merged <- merge(merged, fullTable3, by = "VisitID")
merged <- merge(fam2, modfam2, by="VisitId", by.y="VisitID")
#merged <- merge(fam2, modfam2, by="VisitID")
merged <- merge(merged, fullTable3, by.x="VisitId", by.y="VisitID")
# only 5 cols, group1~3, relative-pain, enjoylife
modfam2<-modfam2[,8:12]
# get rid visitID
fam2<-fam2[,-1]
View(merged)
View(merged)
##################Calculate EDSS Rate###########
merged_updated <- merged[order(merged$EPICID, merged$ExamDate),]
# Add Empty EDSSRate col
merged_updated <- merged[order(merged$EPICID, merged$ExamDate),]
merged[order(merged$EPICID, merged$ExamDate),]
merged$EPICID
View(fam2)
View(fam2)
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
View(fam2)
View(fam2)
View(modfam2)
View(modfam2)
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
#colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
merged <- merge(fam2, modfam2, by="VisitId", by.y="VisitID")
merge$EPICID.y == merge$EPICID.y
merge["EPICID.y"] == merge[EPICID.x"]
eixt()
)
""
merge["EPICID.y"] == merge["EPICID.x"]
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
#merged = merge(fam2, modfam2, by = "VisitID", all.y = TRUE)
#merged <- merge(fam2, modfam2, by = "VisitID")
#merged <- merge(merged, fullTable3, by = "VisitID")
#merged <- merge(fam2, modfam2, by="VisitId", by.y="VisitID")
merged <- merge(fam2, modfam2, by="VisitID")
setwd("~/Dropbox/research/MSBioScreen/MSPrediction-R/Data Scripts")
# get modified-fam2
require(ggplot2)
require(rhdf5)
require(MASS)
require(fitdistrplus)
modfam2<-read.csv("step3/data_all.csv")
# fetch original fam2
load("step1/result.RData")
# Merge fam2, modfam2, fullTable3
#First change fam2 colname "VisitId" to "VisitID"
colnames(fam2)[1] <- "VisitID"
# get rid of column "X" in modfam2
modfam2 <- modfam2[-1]
merged = merge(fam2, modfam2)
View(merged)
View(merged)
merged <- merge(merged, fullTable3)
View(merged)
merged_updated <- merged[order(merged$EPICID, merged$ExamDate),]
# Add Empty EDSSRate col
merged_updated[, "EDSSRate"] <- NA
nvisits <- nrow(merged_updated)
for(i in 1:(nvisits-1)){
dEDSS <- merged_updated[i+1, "ActualEDSS"] - merged_updated[i, "ActualEDSS"]
dDay <- as.numeric(as.Date(merged_updated[i+1,]$ExamDate) - as.Date(merged_updated[i,]$ExamDate))
dYear <- dDay/365
if (merged_updated[i+1, "EPICID"] == merged_updated[i, "EPICID"] ){
merged_updated[i+1, "EDSSRate"] <- dEDSS/dYear
}
}
### one more col in modified EDSSR, ignore abs dEDSSS <= 0.5; 2 class, increase or others
merged_updated[, "ModEDSSR"] <- NA
for(i in 1:(nvisits-1)){
dEDSS <- merged_updated[i+1, "ActualEDSS"] - merged_updated[i, "ActualEDSS"]
dDay <- as.numeric(as.Date(merged_updated[i+1,]$ExamDate) - as.Date(merged_updated[i,]$ExamDate))
dYear <- dDay/365
if (merged_updated[i+1, "EPICID"] == merged_updated[i, "EPICID"] ){
if (abs(dEDSS)<.5){
merged_updated[i+1, "ModEDSSR"] <- 0
} else {
merged_updated[i+1, "ModEDSSR"] <- 1
}
}
}
View(merged_updated)
View(merged_updated)
